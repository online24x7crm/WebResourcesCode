//------------------ Numeric Value
function CheckNumaricValueOnly(context) {
    debugger;
    try {
        var StringFieldValue = context.getEventSource().getName();
        var stringdig = Xrm.Page.getAttribute(StringFieldValue).getValue();
        var len = stringdig.length;
        for (var i = 0; i < stringdig.length; i++) {
            if (stringdig.charCodeAt(i) < 48 || stringdig.charCodeAt(i) > 57) {
                alert("Please Enter Numeric Value");
                Xrm.Page.getAttribute(StringFieldValue).setValue();
                break;
            }
        }
    }
    catch (e) { }
}

//Is Installation Address Same as contact address
function setInstallationAddress() {

    if (Xrm.Page.getAttribute("alletech_isinstallationaddress").getValue() == true) {

        var Pri_country = Xrm.Page.getAttribute("alletech_country").getValue();
        var Pri_state = Xrm.Page.getAttribute("alletech_state").getValue();
        var Pri_city = Xrm.Page.getAttribute("alletech_city").getValue();
        var Pri_area = Xrm.Page.getAttribute("alletech_area1").getValue();
        var PriPinciode = Xrm.Page.getAttribute("alletech_primarypincode").getValue();
        var Priplotno = Xrm.Page.getAttribute("alletech_plotnotwo").getValue();
        var Pri_blocknumbertowernumber = Xrm.Page.getAttribute("alletech_blocknumbertowernumbertwo").getValue();
        var PriBuildingname = Xrm.Page.getAttribute("alletech_primarybuildingname").getValue();
        var Pri_buildingtype = Xrm.Page.getAttribute("alletech_primarybuildingtype").getValue();
        var Pri_Floor = Xrm.Page.getAttribute("alletech_primaryfloor").getValue();
        var Pri_Street = Xrm.Page.getAttribute("alletech_primarystreet").getValue();
        var Prim_locality = Xrm.Page.getAttribute("alletech_primarylocality").getValue();
        var PriLandmark = Xrm.Page.getAttribute("alletech_primarylandmarkifany").getValue();
        var Prim_Buildingcp = Xrm.Page.getAttribute("alletech_specifybuildingcp").getValue();
        var Priareacp = Xrm.Page.getAttribute("alletech_specifyareacp").getValue();



        Xrm.Page.getAttribute("alletech_completecountry").setValue(Pri_country);
        Xrm.Page.getAttribute("alletech_completestate").setValue(Pri_state);
        Xrm.Page.getAttribute("alletech_completecity").setValue(Pri_city);
        Xrm.Page.getAttribute("alletech_area").setValue(Pri_area);
        Xrm.Page.getAttribute("address1_postalcode").setValue(PriPinciode);
        Xrm.Page.getAttribute("alletech_building").setValue(Priplotno);
        Xrm.Page.getAttribute("alletech_block").setValue(Pri_blocknumbertowernumber);
        Xrm.Page.getAttribute("alletech_buildingname").setValue(PriBuildingname);
        Xrm.Page.getAttribute("alletech_buildingtype").setValue(Pri_buildingtype);
        Xrm.Page.getAttribute("alletech_floor").setValue(Pri_Floor);
        Xrm.Page.getAttribute("alletech_street").setValue(Pri_Street);
        Xrm.Page.getAttribute("alletech_locality").setValue(Prim_locality);
        Xrm.Page.getAttribute("alletech_landmarkifany").setValue(PriLandmark);
        Xrm.Page.getAttribute("alletech_specifybuilding").setValue(Prim_Buildingcp);
        Xrm.Page.getAttribute("alletech_specifyarea").setValue(Priareacp);
        setTimeout("Area_inst();", 1000);
        setTimeout("building_inst();", 1000);

    }
    else {
        Xrm.Page.getAttribute("alletech_completecountry").setValue();
        Xrm.Page.getAttribute("alletech_completestate").setValue();
        Xrm.Page.getAttribute("alletech_completecity").setValue();
        Xrm.Page.getAttribute("alletech_area").setValue();
        Xrm.Page.getAttribute("address1_postalcode").setValue();
        Xrm.Page.getAttribute("alletech_building").setValue();
        Xrm.Page.getAttribute("alletech_block").setValue();
        Xrm.Page.getAttribute("alletech_buildingname").setValue();
        Xrm.Page.getAttribute("alletech_buildingtype").setValue();
        Xrm.Page.getAttribute("alletech_floor").setValue();
        Xrm.Page.getAttribute("alletech_street").setValue();
        Xrm.Page.getAttribute("alletech_locality").setValue();
        Xrm.Page.getAttribute("alletech_landmarkifany").setValue();
        Xrm.Page.getAttribute("alletech_specifybuilding").setValue();
        Xrm.Page.getAttribute("alletech_specifyarea").setValue();
        setTimeout("Area_inst();", 1000);
        setTimeout("building_inst();", 1000);
    }
}

//--------------------on load fill business segment

function Get_AutoFillBusinessSegment() {
    debugger;
    Area();
    building();
    building_inst();
    Area_inst();
    document.getElementById("mobilephone_i").setAttribute("title", "Mobile Number");
    document.getElementById("alletech_landlineno_i").setAttribute("title", "Phone Number");
    var businesssegment = Xrm.Page.getAttribute("alletech_businesssegmentglb").getValue();
    if (businesssegment == null) {
        var lookup = new Array();
        lookup = Xrm.Page.getAttribute("ownerid").getValue();
        if (lookup != null) {
            var name = lookup[0].name;
            var id = lookup[0].id;
            var entityType = lookup[0].entityType;
            var GUID = id;
            var Entity_name = "SystemUser";
            GetSpecificEntityData(Entity_name, GUID);
        }
    }
}

function GetSpecificEntityData(EntityName, RecordGuid) {
    debugger;
    var Initial_Dynamic_Url = Xrm.Page.context.getClientUrl();
    var Fixed_Middle_Url = "/XRMServices/2011/OrganizationData.svc/";
    var Url_Endpoint = EntityName + "Set?$filter=" + EntityName + "Id eq guid'" + RecordGuid + "'";
    var oData_url = Initial_Dynamic_Url + Fixed_Middle_Url + Url_Endpoint;
    ajax_GetSpecificDatafunction_get(oData_url, EntityName);
}

function ajax_GetSpecificDatafunction_get(odata, EntityName) {
    debugger;
    $.ajax({
        type: "GET",
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        url: odata,
        async: false,
        beforeSend: function (XMLHttpRequest) { XMLHttpRequest.setRequestHeader("Accept", "application/json"); },
        success: function (data, textStatus, XmlHttpRequest) {
            ProcessReturnedEntity_get(data.d, EntityName);

        },
        error: function (xmlHttpRequest, textStatus, errorThrown) {
            alert("Status: " + textStatus + "; ErrorThrown: " + errorThrown);
        }
    });
}
function GetSpecificState(EntityName, RecordGuid) {
    debugger;
    var Initial_Dynamic_Url = Xrm.Page.context.getClientUrl();
    var Fixed_Middle_Url = "/XRMServices/2011/OrganizationData.svc/";
    var Url_Endpoint = EntityName + "Set?$filter=" + EntityName + "Id eq guid'" + RecordGuid + "'";
    var oData_url = Initial_Dynamic_Url + Fixed_Middle_Url + Url_Endpoint;
    ajax_GetSpecificState_get(oData_url, EntityName);
}

function ajax_GetSpecificState_get(odata, EntityName) {

    debugger;
    $.ajax({
        type: "GET",
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        url: odata,
        async: false,
        beforeSend: function (XMLHttpRequest) { XMLHttpRequest.setRequestHeader("Accept", "application/json"); },
        success: function (data, textStatus, XmlHttpRequest) {
            ProcessReturnedState(data.d, EntityName);

        },
        error: function (xmlHttpRequest, textStatus, errorThrown) {
            alert("Status: " + textStatus + "; ErrorThrown: " + errorThrown);
        }
    });
}
function GetSpecificCountry(EntityName, RecordGuid) {
    debugger;
    var Initial_Dynamic_Url = Xrm.Page.context.getClientUrl();
    var Fixed_Middle_Url = "/XRMServices/2011/OrganizationData.svc/";
    var Url_Endpoint = EntityName + "Set?$filter=" + EntityName + "Id eq guid'" + RecordGuid + "'";
    var oData_url = Initial_Dynamic_Url + Fixed_Middle_Url + Url_Endpoint;
    ajax_GetSpecificCountry_get(oData_url, EntityName);
}

function ajax_GetSpecificCountry_get(odata, EntityName) {

    debugger;
    $.ajax({
        type: "GET",
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        url: odata,
        async: false,
        beforeSend: function (XMLHttpRequest) { XMLHttpRequest.setRequestHeader("Accept", "application/json"); },
        success: function (data, textStatus, XmlHttpRequest) {
            ProcessReturnedCountry(data.d, EntityName);

        },
        error: function (xmlHttpRequest, textStatus, errorThrown) {
            alert("Status: " + textStatus + "; ErrorThrown: " + errorThrown);
        }
    });
}
function ProcessReturnedEntity_get(outputfromodata, EntityName) {
    debugger;
    var output = outputfromodata.results[0];
    var BusinessSegment = SetXML_Lookup(output.alletech_BusinessSegment);
    var operatingcity = SetXML_Lookup(output.alletech_OperatingCity);
    if (operatingcity[0].id != null) {
        Xrm.Page.getAttribute('alletech_completecity').setValue(operatingcity);
        Xrm.Page.getAttribute('alletech_city').setValue(operatingcity);
        GetSpecificState(operatingcity[0].entityType, operatingcity[0].id);
    }
    //  Xrm.Page.getAttribute('alletech_businesssegmentglb').setValue(BusinessSegment);
}
function ProcessReturnedState(outputfromodata, EntityName) {
    debugger;
    var output = outputfromodata.results[0];
    var State = SetXML_Lookup(output.alletech_state);
    if (State[0].id != null) {
        Xrm.Page.getAttribute('alletech_completestate').setValue(State);
        Xrm.Page.getAttribute('alletech_state').setValue(State);
        GetSpecificCountry(State[0].entityType, State[0].id);
    }

}
function ProcessReturnedCountry(outputfromodata, EntityName) {
    debugger;
    var output = outputfromodata.results[0];
    var Country = SetXML_Lookup(output.alletech_country);
    if (Country[0].id != null) {
        Xrm.Page.getAttribute('alletech_completecountry').setValue(Country);
        Xrm.Page.getAttribute('alletech_country').setValue(Country);
    }
}
function SetXML_Lookup(lookup) {
    var currentlookup = new Array();
    currentlookup[0] = new Object();
    currentlookup[0].id = lookup.Id;
    currentlookup[0].name = lookup.Name;
    currentlookup[0].entityType = lookup.LogicalName;

    return currentlookup;
}

//-------------- other scripts on lead_js 

function setCompanyName() {

    var companyName = Xrm.Page.getAttribute("companyname").getValue();
    if (companyName == null || companyName == undefined) {

        var newName = Xrm.Page.getAttribute("fullname").getValue();
        Xrm.Page.getAttribute("companyname").setValue(newName);
    }

}

function statusReadOnly() {
    Xrm.Page.ui.controls.get("new_status").setDisabled(true)
}

function validateEmail(email) {
    debugger;
    var emailReg = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
    var value = Xrm.Page.getAttribute(email).getValue();
    var valid = emailReg.test(value);

    if (!valid) {
        alert("Invalid Email. Kindly Re-Enter");
        Xrm.Page.getAttribute(email).setValue("");
    }
}

function mobileNoValidation() {
    var string = Xrm.Page.getAttribute("mobilephone").getValue();
    var len = parseInt(string.length);
    if (len < 10 || len > 10) {
        alert("Please Enter 10 Digit Mobile no.");
        Xrm.Page.getAttribute("mobilephone").setValue();
    } else {

        for (var i = 0; i < string.length; i++) {
            if (string.charCodeAt(i) < 48 || string.charCodeAt(i) > 57) {
                alert("Inavlid Mobile No.");
                Xrm.Page.getAttribute("mobilephone").setValue();
            }
        }
        return false;
    }
}

//Phone No.(Landline)
function phonenoValidation() {
    var string = Xrm.Page.getAttribute("alletech_landlineno").getValue();
    var len = parseInt(string.length);
    if (len < 11 || len > 11) {
        alert("Please Enter Correct Phone No.");
        Xrm.Page.getAttribute("alletech_landlineno").setValue();
    } else {

        for (var i = 0; i < string.length; i++) {
            if (string.charCodeAt(i) < 48 || string.charCodeAt(i) > 57) {
                alert("Inavlid Phone No.");
                Xrm.Page.getAttribute("alletech_landlineno").setValue();
            }
        }
        return false;
    }
}

//Lead Information Status
function onSaveLeadInformationStatus() {
    debugger;
    var leadinformationstatus = Xrm.Page.getAttribute("alletech_leadinformationstatus").getValue();
    if (leadinformationstatus == null) {
        Xrm.Page.getAttribute("alletech_leadinformationstatus").setValue(1);
        Xrm.Page.getAttribute("alletech_leadinformationstatus").setSubmitMode("always");
    }
}

//Lead Category On Load for Lead
function LeadCategory() {
    debugger;
    var closuredate = Xrm.Page.getAttribute("alletech_closuredate").getValue();
    if (closuredate == null || closuredate == undefined) {

        Xrm.Page.getAttribute("alletech_leadcategory").setValue(null);

    }
}


//hide Qualify button On Load for Lead
function disable_Qualifybutton() {
    debugger;
    var closuredate = Xrm.Page.getAttribute("alletech_closuredate").getValue();
    if (closuredate == null || closuredate == undefined) {
        var reject = top.document.getElementById("lead|NoRelationship|Form|Mscrm.Form.lead.ConvertLeadQuick");
        if (reject != null || reject != undefined) {
            reject.style.display = "none";
        }
    }
}
// onsave

function disable_QualifybuttonSave() {
    debugger;
    var closuredate = Xrm.Page.getAttribute("alletech_closuredate").getValue();
    if (closuredate == null || closuredate == undefined) {
        var reject = top.document.getElementById("lead|NoRelationship|Form|Mscrm.Form.lead.ConvertLeadQuick");
        if (reject != null || reject != undefined) {
            reject.style.display = "none";
        }
        else {
            setTimeout("disable_Qualifybutton();", 2500);
        }
    }
}


//Business Segment for Business
function onBusinessSegmentChange() {
    debugger;
    var lookup = new Array();
    lookup = Xrm.Page.getAttribute("alletech_businesssegmentglb").getValue();

    if (lookup != null) {

        var BusinessSegmentChang = lookup[0].name;

        if (BusinessSegmentChang == "Business" || BusinessSegmentChang == "BUSINESS" || BusinessSegmentChang == "Business SMB") {

            Xrm.Page.getAttribute("alletech_leadchannellookup").setRequiredLevel("required");
            Xrm.Page.getAttribute("alletech_leadsourcelookup").setRequiredLevel("required");
            Xrm.Page.getAttribute("alletech_buildingname").setRequiredLevel("required");
            Xrm.Page.getAttribute("alletech_primarybuildingname").setRequiredLevel("required");
            Xrm.Page.getAttribute("companyname").setRequiredLevel("required");
            //  Xrm.Page.getAttribute("alletech_closuredate").setRequiredLevel("required");

        }

    }
}


//Business Lead Category
function OnLoadDate() {
    debugger;
    var expectedclosuredate = Xrm.Page.getAttribute("alletech_closuredate").getValue();
    var modifieddate = Xrm.Page.getAttribute("modifiedon").getValue();

    if ((expectedclosuredate != null) && (modifieddate != null)) {

        var expectedclosureYear = expectedclosuredate.getFullYear() + "";
        var expectedclosureMonth = (expectedclosuredate.getMonth() + 1) + "";
        var expectedclosureDay = expectedclosuredate.getDate() + "";

        var modifieddateYear = modifieddate.getFullYear() + "";
        var modifieddateMonth = (modifieddate.getMonth() + 1) + "";
        var modifieddateDay = modifieddate.getDate() + "";

        if ((expectedclosureYear == modifieddateYear) && (expectedclosureMonth == modifieddateMonth)) {
            Xrm.Page.getAttribute("alletech_leadcategory").setValue(1);
        }

    }

}


////////////////////Function//////////
function preFilterLookup() {
    debugger;
    Xrm.Page.getControl("alletech_channelpartner").addPreSearch(function () {
        addLookupFilter();
    });
}

function addLookupFilter() {
    debugger;


    fetchXml = "<filter type='and'> <condition attribute='alletech_accountmanager' operator='eq-userid'/></filter>";

    Xrm.Page.getControl("alletech_channelpartner").addCustomFilter(fetchXml);
}


/////////////////////Function/////////
function Area_inst() {
    debugger;
    var area = new Array();
    area = Xrm.Page.getAttribute("alletech_area").getValue();
    if (area != null) {
        var areaname = area[0].name.toLowerCase();
        if (areaname == "other") {
            Xrm.Page.ui.controls.get("alletech_specifyarea").setVisible(true);
            Xrm.Page.getAttribute("alletech_specifyarea").setRequiredLevel("required");
        }
    }
    else {
        Xrm.Page.ui.controls.get("alletech_specifyarea").setVisible(false);
        Xrm.Page.getAttribute("alletech_specifyarea").setRequiredLevel("none");
        Xrm.Page.getAttribute("alletech_specifyarea").setValue(null);
    }
}

//////////////////////////////////////////////////Function For building/////////////////////////
function building_inst() {
    debugger;
    var area = new Array();
    area = Xrm.Page.getAttribute("alletech_buildingname").getValue();
    if (area != null) {
        var areaname = area[0].name.toLowerCase();
        if (areaname == "other") {
            Xrm.Page.ui.controls.get("alletech_specifybuilding").setVisible(true);
            Xrm.Page.getAttribute("alletech_specifybuilding").setRequiredLevel("required");
        }

    }
    else {
        Xrm.Page.ui.controls.get("alletech_specifybuilding").setVisible(false);
        Xrm.Page.getAttribute("alletech_specifybuilding").setRequiredLevel("none");
        Xrm.Page.getAttribute("alletech_specifybuilding").setValue(null);
    }
}

// ---------------------- contactperson area building

function Area() {
    debugger;
    var area = new Array();
    area = Xrm.Page.getAttribute("alletech_area1").getValue();
    if (area != null) {
        var areaname = area[0].name.toLowerCase();
        if (areaname == "other") {
            Xrm.Page.ui.controls.get("alletech_specifyareacp").setVisible(true);
            Xrm.Page.getAttribute("alletech_specifyareacp").setRequiredLevel("required");
        }
    }
    else {
        Xrm.Page.ui.controls.get("alletech_specifyareacp").setVisible(false);
        Xrm.Page.getAttribute("alletech_specifyareacp").setRequiredLevel("none");
        Xrm.Page.getAttribute("alletech_specifyareacp").setValue(null);
    }
}

//////////////////////////////////////////////////contactperson area building Function For building/////////////////////////
function building() {
    debugger;
    var area = new Array();
    area = Xrm.Page.getAttribute("alletech_primarybuildingname").getValue();
    if (area != null) {
        var areaname = area[0].name.toLowerCase();
        if (areaname == "other") {
            Xrm.Page.ui.controls.get("alletech_specifybuildingcp").setVisible(true);
            Xrm.Page.getAttribute("alletech_specifybuildingcp").setRequiredLevel("required");
        }

    }
    else {
        Xrm.Page.ui.controls.get("alletech_specifybuildingcp").setVisible(false);
        Xrm.Page.getAttribute("alletech_specifybuildingcp").setRequiredLevel("none");
        Xrm.Page.getAttribute("alletech_specifybuildingcp").setValue(null);
    }
}



function setReadOnlyfield() {


    Xrm.Page.getAttribute("alletech_leadcategory").setSubmitMode("always");

}


//////////////////////////////////////////////////////////////////////////////////////////////////
function get_rfs(Entity, field) {
    debugger;
    var product = Xrm.Page.getAttribute(field).getValue();

    if (product != null) {


        var id = product[0].id;
        var name = product[0].name;

        var odata_start = Xrm.Page.context.getClientUrl();

        var odata_end = "/XRMServices/2011/OrganizationData.svc/";

        var odata_entity = Entity + "Set?$filter=" + Entity + "Id eq guid'" + id + "'";

        var final_odataurl = odata_start + odata_end + odata_entity;


        $.ajax({


            type: "GET",
            contentType: "application/json; charset=utf-8",

            datatype: "json",

            url: final_odataurl,

            beforeSend: function (XMLHttpRequest) { XMLHttpRequest.setRequestHeader("Accept", "application/json"); },
            success: function (data, textStatus, XmlHttpRequest) {
                callfetch(data.d.results, id);
                debugger;

            },


            error: function (xmlHttpRequest, textStatus, errorThrown) {

                alert("Status: " + textStatus + "; ErrorThrown: " + errorThrown);
            }
        });
    }


    else {
        Xrm.Page.ui.controls.get("alletech_rfs").setVisible(false);

    }
}
function callfetch(obj, id) {
    debugger;
    len = obj.length;
    for (i = 0; i < len; i++) {

        var obj1 = obj[i];
        var rfs = obj1.alletech_RFS;

        Xrm.Page.ui.controls.get("alletech_rfs").setVisible(rfs);
        Xrm.Page.getAttribute("alletech_rfs").setValue(rfs);

    }
}

function saveform() {
    debugger;
    setTimeout(function () { }, 4000);
    Xrm.Page.data.entity.save();
}

 //written for SDWAN
function HideQualify() {

  //  var EMS = Xrm.Page.getAttribute("alletech_servicetype").getValue();
    //if (EMS == 1) {
       // return false;
    //}
    //else {
        var closuredate = Xrm.Page.getAttribute("alletech_closuredate").getValue();
        if (closuredate == null)
            return false;
        else
            return true;
    //}
}
