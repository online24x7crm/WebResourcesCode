<html><head>
    <meta http-equiv="X-UA-Compatible" content="IE=9">

    <script src="spectra_jquery.2.1.3.js" type="text/javascript"></script>
    <script src="spectra_bootstrap.3.3.7.min.js" type="text/javascript"></script>
    <script src="spectra_Bootstrap_select.js" type="text/javascript"></script>
    <script src="spectra_XRMServiceToolkit" type="text/javascript"></script>

    <link href="spectra_bootstrap.3.3.css" rel="stylesheet">
    <link href="spectra_Bootstrap_Select" rel="stylesheet">
    <script src="ClientGlobalContext.js.aspx" type="text/javascript"></script>


    <script type="text/javascript">

        var Records = ""; var obj = null; var oopport="";
        $(document).ready(function () {
		 debugger;
            var priceLevelId = opener.Xrm.Page.getAttribute("onl_pricelist").getValue()[0].id;//passedparams.PriceId;
            var customerSegmentCode = opener.Xrm.Page.getAttribute("spectra_customersegmentcode").getValue();//passedparams.CustSegment;
            oopport=opener.Xrm.Page.getAttribute("onl_opportunityidid").getValue()[0].id;
            //alert(oopport);
            //alert(priceLevelId);
           // alert(customerSegmentCode);
            //obj = window.dialogArguments;
            //var priceLevelId = obj.Price;
            //var customerSegmentCode = obj.Seg;

            try {
                alert("Fetching products...");

                //fetching products using fetch xml
                Getproducts(customerSegmentCode, priceLevelId);

                for (i = 0; i < Records.length; i++) {
                    $("#ProductItems").append("<option value=" + Records[i].id + ">  " + Records[i].attributes.name.value + "</option>");
                }

                $("#lblUomId").html(Records[0].attributes['ah.uomid'].id);
                $("#products").show();
            }
            catch (ex) {
                alert("error occured:" + ex);
                alert("please close the window and try again ");
            }

            $("#FetchingDiv").hide();
        });

        function Getproducts(customerSegmentCode, priceLevelId) {

            var fetchXml = "<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='true' nolock='true'>" +
                "<entity name='product'>" +
                "<attribute name='name' />" +
                "<attribute name='productnumber' />" +
                "<attribute name='productid' />" +
                "<order attribute='productnumber' descending='false' />" +
                "<filter type='and'>" +
                "<condition attribute='spectra_customersegmentcode' operator='eq' value='" + customerSegmentCode + "' />" +
                "<condition attribute='name' operator='not-like' value='%RC%' />" +
                "<condition attribute='name' operator='not-like' value='%OTC%' />" +
                "</filter>" +
                "<link-entity name='productpricelevel' from='productid' to='productid' alias='ah'>" +
                "<attribute  name='uomid'/>" +
                "<filter type='and'>" +
                "<condition attribute='pricelevelid' operator='eq' uiname='' uitype='pricelevel' value='" + priceLevelId + "' />" +
                "</filter>" +
                "</link-entity>" +
                "</entity>" +
                "</fetch>";

            Records = XrmServiceToolkit.Soap.Fetch(fetchXml);

            //spectra_XRMServiceToolkit.fetch({
            //    fetchXml: fetchXml,
            //    async: false,
            //    successCallback: function (result) {
            //        Records = result.entities;
            //    },

            //    errorCallback: function (error) {
            //        throw error;
            //    }
            //});

            return Records;
        }

        function save() {

			//alert(document.getElementById("ProductItems").value);
			if (document.getElementById("ProductItems").value != "0") {

				var context = Xrm.Page.context;					
                var serverUrl = context.getClientUrl();
				//alert(serverUrl);
                var ODATA_ENDPOINT = "/XRMServices/2011/OrganizationData.svc";
				 var oppId = opener.Xrm.Page.data.entity.getId().replace("{", "").replace("}", "");
				// alert(oppId);
				
                if (Xrm.Page.getAttribute("onl_opportunityidid") != null)
                    {
                    var id = Xrm.Page.getAttribute("onl_opportunityidid").getValue()[0].id; 
                     //alert('value:'+id);
                    }
               
                    //alert(document.getElementById("ProductItems").value);
                    //alert($("#lblUomId")[0].innerHTML);
				var CRMObject = new Object();
				   // Specify the ODATA entity collection
                var ODATA_EntityCollection = "/OpportunityProductSet";
                // var ODATA_EntityCollection = "/onl_customersiteSet";
                CRMObject.OpportunityId = { Id: oopport, LogicalName: "opportunity", Name: "" };
                CRMObject.ProductId = { Id: document.getElementById("ProductItems").value, LogicalName: "product", Name: "" };
                CRMObject.onl_customerDetailsId = { Id: oppId, LogicalName: "onl_customersite", Name: "" };

                //CRMObject.onl_customerDetailsId =  {Id: "oppId", LogicalName: "customerDetails",Name:"", type: "Microsoft.Crm.Sdk.Data.Services.EntityReference"};

                CRMObject.UoMId = { Id: $("#lblUomId")[0].innerHTML, LogicalName: "uom", Name: "" };
                CRMObject.IsProductOverridden = false;
                CRMObject.IsPriceOverridden = false;
                CRMObject.Quantity = parseFloat(1).toFixed(5);//"1.00";
                
				 
				//alert(serverUrl+"" + ODATA_ENDPOINT+"" + ODATA_EntityCollection);

				 var jsonEntity = window.JSON.stringify(CRMObject);
				 //alert(jsonEntity);

				   //Asynchronous AJAX function to Create a CRM record using OData
                $ = parent.$;
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    async: false,
                    url: serverUrl + ODATA_ENDPOINT + ODATA_EntityCollection,
                    data: jsonEntity,
                    beforeSend: function (XMLHttpRequest) {
                        //Specifying this header ensures that the results will be returned as JSON.
                        XMLHttpRequest.setRequestHeader("Accept", "application/json");
                    },
                    success: function (data, textStatus, XmlHttpRequest) {
                        if (data != null) {
                          // alert("success  "+ connID);
                        }

                        try {
                            //opener.Xrm.Page.getAttribute("onl_getrelatedproducts").setValue(1);
                            opener.Xrm.Page.ui.controls.get("opportunityproductsGrid").refresh();
							//opener.Xrm.Page.data.refresh();
							opener.Xrm.Page.data.entity.save();
                            //opener.Xrm.data.entity.save();
                            window.close();
                        }
                        catch (e) {
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Unable to process the request : " + XMLHttpRequest.responseJSON.error.message.value);
                    }
                });


			}

        }

        function sendreturn() {
            window.opener.location.reload();
        }
    </script>
<meta charset="utf-8"></head>
<body style="overflow-wrap: break-word;">
    <br>
    &nbsp;&nbsp;&nbsp; <input style="padding: 5px 10px; width: 60px; font-family: Segoe UI,Tahoma,Arial; font-size: 12px;" onclick="save()" type="button" value="Add">
    <br>
    <br>
    <div class="div1" id="FetchingDiv" style="font-family: Segoe UI,Tahoma,Arial; font-size: 12px;">
        <p>Fetching products...</p>
    </div>

    <div class="form-group col-sm-4" id="products" style="display: none;">
        <label for="sel1">Products</label>
        <select class="selectpicker form-control" id="ProductItems" data-live-search="true">
            <option value="0">Select</option>
        </select>
        <label id="lblUomId" style="display: none;">vv</label>
    </div>
    <div class="div1" id="ProcessDiv" style="font-family: Segoe UI,Tahoma,Arial; font-size: 12px; display: none;">
        <p>Saving...</p>
    </div>

</body></html>